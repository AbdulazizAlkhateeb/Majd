# Generated by Django 5.2.4 on 2025-09-02 08:18

import django.db.models.deletion
from django.db import migrations, models


def make_titles_unique(apps, schema_editor):
    """Make titles unique by adding a number suffix if needed"""
    SubscriptionPlan = apps.get_model('payment', 'SubscriptionPlan')
    
    # Group by academy and track titles
    academy_titles = {}
    
    for plan in SubscriptionPlan.objects.all():
        academy_id = plan.academy_id
        base_title = "Subscription Plan"
        
        if academy_id not in academy_titles:
            academy_titles[academy_id] = set()
        
        # Find a unique title for this academy
        title = base_title
        counter = 1
        while title in academy_titles[academy_id]:
            title = f"{base_title} {counter}"
            counter += 1
        
        academy_titles[academy_id].add(title)
        plan.title = title
        plan.save()


def reverse_make_titles_unique(apps, schema_editor):
    """Reverse migration - set all titles back to default"""
    SubscriptionPlan = apps.get_model('payment', 'SubscriptionPlan')
    SubscriptionPlan.objects.all().update(title="Subscription Plan")


class Migration(migrations.Migration):

    dependencies = [
        ('academies', '0011_session_enrolled'),
        ('payment', '0001_initial'),
    ]

    operations = [
        # First, add the title field
        migrations.AddField(
            model_name='subscriptionplan',
            name='title',
            field=models.CharField(default='Subscription Plan', max_length=200),
        ),
        # Then add other new fields
        migrations.AddField(
            model_name='subscriptionplan',
            name='billing_type',
            field=models.CharField(choices=[('3m', '3-Month'), ('6m', '6-Month'), ('12m', '12-Month'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], default='monthly', max_length=10),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='program_features',
            field=models.JSONField(blank=True, default=list),
        ),
        # Then alter existing fields
        migrations.AlterField(
            model_name='subscriptionplan',
            name='plan_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscription_plans', to='payment.plantype'),
        ),
        # Remove old field
        migrations.RemoveField(
            model_name='subscriptionplan',
            name='duration_days',
        ),
        # Make titles unique before adding unique constraint
        migrations.RunPython(
            make_titles_unique,
            reverse_make_titles_unique,
        ),
        # Finally, alter the unique constraint (after titles are unique)
        migrations.AlterUniqueTogether(
            name='subscriptionplan',
            unique_together={('academy', 'title')},
        ),
    ]
